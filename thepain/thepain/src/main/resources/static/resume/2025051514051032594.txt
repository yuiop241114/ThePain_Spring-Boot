-- 1. 지원 현황 관련 테이블
DROP TABLE APPLY_STATE CASCADE CONSTRAINTS;

-- 2. 첨부파일 테이블
DROP TABLE ATTACHMENT CASCADE CONSTRAINTS;

-- 3. 채용공고 글 작성 테이블
DROP TABLE JOB_WRITE_POST CASCADE CONSTRAINTS;

-- 4. 채용공고 테이블
DROP TABLE JOB_POST CASCADE CONSTRAINTS;

-- 5. 채용공고 기술 매핑 테이블 
DROP TABLE JOB_POST_SKILLS CASCADE CONSTRAINTS;

-- 6. 회원 기술 매핑 테이블
DROP TABLE MEMBER_SKILLS CASCADE CONSTRAINTS;

-- 7. 기술 테이블
DROP TABLE SKILL CASCADE CONSTRAINTS;

-- 8. 찜 테이블
DROP TABLE JJIM CASCADE CONSTRAINTS;

-- 9. 알림 테이블
DROP TABLE ALARM CASCADE CONSTRAINTS;


-- 10. 회원 테이블
DROP TABLE MEMBER CASCADE CONSTRAINTS;

-- 11. 기업 테이블
DROP TABLE COMPANY CASCADE CONSTRAINTS;

-- 12. 회원별 알람 내역 테이블
DROP TABLE ALARM_HISTORY CASCADE CONSTRAINTS;
------------------------------------------------------- 기존 시퀀스 삭제 (존재하면 삭제)
DROP SEQUENCE SEQ_ENTERPRISE_NO;
DROP SEQUENCE SEQ_MEMBER_NO;
DROP SEQUENCE SEQ_PICK_NO;
DROP SEQUENCE SEQ_RECRUITMENT_NO;
DROP SEQUENCE SEQ_POST_NO;
DROP SEQUENCE SEQ_FILE_NO;
DROP SEQUENCE SEQ_ALARM_NO;
DROP SEQUENCE SEQ_ALARM_HISTORY_NO;
DROP SEQUENCE SEQ_WRITE_POST_NO;

----------------------------------------------------------시퀀스 생성
-- 기업 번호 시퀀스
CREATE SEQUENCE SEQ_ENTERPRISE_NO START WITH 1 INCREMENT BY 1;

-- 회원 번호 시퀀스
CREATE SEQUENCE SEQ_MEMBER_NO START WITH 1 INCREMENT BY 1;

-- 찜 번호 시퀀스
CREATE SEQUENCE SEQ_PICK_NO START WITH 1 INCREMENT BY 1;

-- 채용공고 번호 시퀀스
CREATE SEQUENCE SEQ_RECRUITMENT_NO START WITH 1 INCREMENT BY 1;

-- 공고글 작성 번호 시퀀스
CREATE SEQUENCE SEQ_POST_NO START WITH 1 INCREMENT BY 1;

-- 첨부파일 번호 시퀀스
CREATE SEQUENCE SEQ_FILE_NO START WITH 1 INCREMENT BY 1;

-- 알림 메세지 번호 시퀀스
CREATE SEQUENCE SEQ_ALARM_NO START WITH 1 INCREMENT BY 1;

-- 회원별 알람 내역 테이블
CREATE SEQUENCE SEQ_ALARM_HISTORY_NO START WITH 1 INCREMENT BY 1;

-- 채용공고 글 작성 번호 시퀀스
CREATE SEQUENCE SEQ_WRITE_POST_NO START WITH 1 INCREMENT BY 1;
-------------------------------------------------------------테이블 생성 구문

-- CREATE TABLE COMPANY
CREATE TABLE COMPANY (
    ENTERPRISE_NO NUMBER PRIMARY KEY,
    ENTERPRISE_NAME VARCHAR2(50) NOT NULL,
    EMPNO NUMBER,
    STATUS CHAR(1) DEFAULT 'Y'
);

-- COMMENT ON COMPANY
COMMENT ON TABLE COMPANY IS '기업 테이블';
COMMENT ON COLUMN COMPANY.ENTERPRISE_NO IS '기업 번호 (PK)';
COMMENT ON COLUMN COMPANY.ENTERPRISE_NAME IS '기업명';
COMMENT ON COLUMN COMPANY.EMPNO IS '직원 수';
COMMENT ON COLUMN COMPANY.STATUS IS '기업 상태 (Y/N)';

-- INSERT INTO COMPANY
INSERT INTO COMPANY VALUES (SEQ_ENTERPRISE_NO.NEXTVAL, '카카오', 5000, 'Y');
INSERT INTO COMPANY VALUES (SEQ_ENTERPRISE_NO.NEXTVAL, '네이버', 4500, 'Y');
INSERT INTO COMPANY VALUES (SEQ_ENTERPRISE_NO.NEXTVAL, '배달의민족', 3000, 'Y');
INSERT INTO COMPANY VALUES (SEQ_ENTERPRISE_NO.NEXTVAL, '토스', 2000, 'Y');
INSERT INTO COMPANY VALUES (SEQ_ENTERPRISE_NO.NEXTVAL, '쿠팡', 7000, 'Y');
----------------------------------------------------------------------------------
-- CREATE TABLE MEMBER
CREATE TABLE MEMBER (
    MEMBER_NO NUMBER PRIMARY KEY,
    ENTERPRISE_NO NUMBER,
    EMAIL VARCHAR2(1000) NOT NULL,
    GIT_USERNAME VARCHAR2(50),
    MEMBER_PWD VARCHAR2(500) NOT NULL,
    MEMBER_NAME VARCHAR2(50) NOT NULL,
    PHONE VARCHAR2(30) NOT NULL,
    TOKEN VARCHAR2(1000),
    SKILL VARCHAR2(1000),
    CAREER NUMBER DEFAULT 0 NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT FK_MEMBER_ENTERPRISE FOREIGN KEY (ENTERPRISE_NO) REFERENCES COMPANY(ENTERPRISE_NO)
);

-- COMMENT ON MEMBER
COMMENT ON TABLE MEMBER IS '회원 테이블';
COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원 번호 (PK)';
COMMENT ON COLUMN MEMBER.ENTERPRISE_NO IS '소속 기업 번호 (FK)';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일(ID)';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '이름';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.TOKEN IS 'Github 토큰';
COMMENT ON COLUMN MEMBER.SKILL IS '보유 기술 (문자열)';
COMMENT ON COLUMN MEMBER.CAREER IS '경력 년수';
COMMENT ON COLUMN MEMBER.STATUS IS '회원 상태';

-- INSERT INTO MEMBER
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 1, 'hong@kakao.com', NULL, 'pass1', '홍길동', '010-1111-1111', NULL, 'Java,Spring', 3, 'Y');
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 2, 'kim@naver.com', NULL, 'pass2', '김철수', '010-2222-2222', NULL, 'React,Node.js', 2, 'Y');
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 3, 'lee@woowahan.com', NULL, 'pass3', '이영희', '010-3333-3333', NULL, 'SQL,MyBatis', 4, 'Y');
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 4, 'park@toss.com', NULL, 'pass4', '박서준', '010-4444-4444', NULL, 'Vue,JavaScript', 1, 'Y');
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 5, 'choi@coupang.com', NULL, 'pass5', '최지우', '010-5555-5555', NULL, 'Python,Django', 5, 'Y');





----------------------------------------------------------------------------------
-- CREATE TABLE SKILL
CREATE TABLE SKILL (
    SKILL_NO NUMBER PRIMARY KEY,
    SKILL_NAME VARCHAR2(30) NOT NULL
);

-- COMMENT ON SKILL
COMMENT ON TABLE SKILL IS '기술 테이블';
COMMENT ON COLUMN SKILL.SKILL_NO IS '기술 번호 (PK)';
COMMENT ON COLUMN SKILL.SKILL_NAME IS '기술명';

-- INSERT INTO SKILL
INSERT INTO SKILL VALUES (1, 'Java');
INSERT INTO SKILL VALUES (2, 'Spring');
INSERT INTO SKILL VALUES (3, 'React');
INSERT INTO SKILL VALUES (4, 'MyBatis');
INSERT INTO SKILL VALUES (5, 'Python');



----------------------------------------------------------------------------------
-- CREATE TABLE MEMBER_SKILLS
CREATE TABLE MEMBER_SKILLS (
    MEMBER_NO NUMBER NOT NULL,
    SKILL_NO NUMBER NOT NULL,
    CONSTRAINT FK_MEM_SKILL_MEMBER FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO),
    CONSTRAINT FK_MEM_SKILL_SKILL FOREIGN KEY (SKILL_NO) REFERENCES SKILL(SKILL_NO),
    CONSTRAINT PK_MEMBER_SKILLS PRIMARY KEY (MEMBER_NO, SKILL_NO)
);

-- COMMENT ON MEMBER_SKILLS
COMMENT ON TABLE MEMBER_SKILLS IS '회원 기술 매핑 테이블';
COMMENT ON COLUMN MEMBER_SKILLS.MEMBER_NO IS '회원 번호 (FK)';
COMMENT ON COLUMN MEMBER_SKILLS.SKILL_NO IS '기술 번호 (FK)';

-- INSERT INTO MEMBER_SKILLS
INSERT INTO MEMBER_SKILLS VALUES (1, 1); -- 홍길동: Java
INSERT INTO MEMBER_SKILLS VALUES (1, 2); -- 홍길동: Spring
INSERT INTO MEMBER_SKILLS VALUES (2, 3); -- 김철수: React
INSERT INTO MEMBER_SKILLS VALUES (3, 4); -- 이영희: MyBatis
INSERT INTO MEMBER_SKILLS VALUES (5, 5); -- 최지우: Python
----------------------------------------------------------------------------------
-- CREATE TABLE JOB_POST
CREATE TABLE JOB_POST (
    RECRUITMENT_NO NUMBER PRIMARY KEY,
    MEMBER_NO NUMBER NOT NULL,
    ENTERPRISE_NO NUMBER NOT NULL,
    RECRUITMENT_DATE DATE DEFAULT SYSDATE,
    COUNT NUMBER DEFAULT 0,
    DEADLINE DATE NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y',
    CONSTRAINT FK_JOB_POST_MEMBER FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO),
    CONSTRAINT FK_JOB_POST_ENTERPRISE FOREIGN KEY (ENTERPRISE_NO) REFERENCES COMPANY(ENTERPRISE_NO)
);

-- COMMENT ON JOB_POST
COMMENT ON TABLE JOB_POST IS '채용공고 테이블';
COMMENT ON COLUMN JOB_POST.RECRUITMENT_NO IS '공고 번호 (PK)';
COMMENT ON COLUMN JOB_POST.MEMBER_NO IS '작성 회원 번호 (FK)';
COMMENT ON COLUMN JOB_POST.ENTERPRISE_NO IS '기업 번호 (FK)';
COMMENT ON COLUMN JOB_POST.RECRUITMENT_DATE IS '공고 등록일';
COMMENT ON COLUMN JOB_POST.COUNT IS '조회수';
COMMENT ON COLUMN JOB_POST.DEADLINE IS '지원 마감일';
COMMENT ON COLUMN JOB_POST.STATUS IS '공고 상태';

-- INSERT INTO JOB_POST
INSERT INTO JOB_POST VALUES (SEQ_POST_NO.NEXTVAL, 1, 1, SYSDATE, 100, TO_DATE('2025-05-31','YYYY-MM-DD'), 'Y');
INSERT INTO JOB_POST VALUES (SEQ_POST_NO.NEXTVAL, 2, 2, SYSDATE, 50, TO_DATE('2025-05-30','YYYY-MM-DD'), 'Y');
INSERT INTO JOB_POST VALUES (SEQ_POST_NO.NEXTVAL, 3, 3, SYSDATE, 70, TO_DATE('2025-06-01','YYYY-MM-DD'), 'Y');
INSERT INTO JOB_POST VALUES (SEQ_POST_NO.NEXTVAL, 4, 4, SYSDATE, 90, TO_DATE('2025-06-05','YYYY-MM-DD'), 'Y');
INSERT INTO JOB_POST VALUES (SEQ_POST_NO.NEXTVAL, 5, 5, SYSDATE, 30, TO_DATE('2025-06-10','YYYY-MM-DD'), 'Y');




----------------------------------------------------------------------------------
-- CREATE TABLE JOB_WRITE_POST
CREATE TABLE JOB_WRITE_POST (

    POST_NO NUMBER PRIMARY KEY,
    COMPANY_NAME VARCHAR2(100) NOT NULL,
    POST_TITLE VARCHAR2(1000) NOT NULL,
    HIRE_TYPE VARCHAR2(100) NOT NULL,
    START_SALARY NUMBER NOT NULL,
    END_SALARY NUMBER NOT NULL,
    REQUIRE_DESCRIPTION VARCHAR2(2000) NOT NULL,
    MAIN_DUTIES VARCHAR2(2000) NOT NULL,
    NICE_TO_HAVE_SKILLS VARCHAR2(2000),
    DEADLINE DATE DEFAULT SYSDATE NOT NULL,    
    STATUS CHAR DEFAULT 'Y',
    CONSTRAINT FK_JOB_WRITER_POST_NO FOREIGN KEY (POST_NO) REFERENCES JOB_POST(RECRUITMENT_NO)
);

-- COMMENT ON JOB_WRITE_POST
COMMENT ON TABLE JOB_WRITE_POST IS '채용공고 글작성 테이블';

COMMENT ON COLUMN JOB_WRITE_POST.POST_NO IS '공고 번호 (PK)';
COMMENT ON COLUMN JOB_WRITE_POST.COMPANY_NAME IS '회사명(FK)';
COMMENT ON COLUMN JOB_WRITE_POST.POST_TITLE IS '직무명';
COMMENT ON COLUMN JOB_WRITE_POST.HIRE_TYPE IS '근무 형태';
COMMENT ON COLUMN JOB_WRITE_POST.START_SALARY IS '시작 급여 ';
COMMENT ON COLUMN JOB_WRITE_POST.END_SALARY IS '끝 급여 ';
COMMENT ON COLUMN JOB_WRITE_POST.REQUIRE_DESCRIPTION IS '자격요건';
COMMENT ON COLUMN JOB_WRITE_POST.MAIN_DUTIES IS '주요업무';
COMMENT ON COLUMN JOB_WRITE_POST.NICE_TO_HAVE_SKILLS IS '우대사항';
COMMENT ON COLUMN JOB_WRITE_POST.DEADLINE IS '마감일자';

COMMENT ON COLUMN JOB_WRITE_POST.STATUS IS '글 상태';



-- INSERT INTO JOB_WRITE_POST
--INSERT INTO JOB_WRITE_POST VALUES (SEQ_WRITE_POST_NO.NEXTVAL, '카카오','백엔드 개발자', '정규직', 2300, 2500, '인성이 제일 중요하다고 봅니다. ', 'API 설계 및 유지보수', '컴퓨터공학 전공 우대','Y');
--INSERT INTO JOB_WRITE_POST VALUES (SEQ_WRITE_POST_NO.NEXTVAL, '네이버','프론트 개발자', '비정규직', 2300, 2500, '대학교 졸업', '디자인 시스템 구축', 'UX 경험 우대','Y');
--INSERT INTO JOB_WRITE_POST VALUES (SEQ_WRITE_POST_NO.NEXTVAL, '배달의민족','서버 관리자', '기간직', 2300, 2500, '외국어 능력 필수', 'ERD 설계 및 백업관리', 'DBA 경험자 우대','Y');
--INSERT INTO JOB_WRITE_POST VALUES (SEQ_WRITE_POST_NO.NEXTVAL, '토스','서버 관리자', '시간제 정규직', 2300, 2500, '경력3년차 부터', '전체 서비스 개발', '팀 프로젝트 경험 우대','Y');
--INSERT INTO JOB_WRITE_POST VALUES (SEQ_WRITE_POST_NO.NEXTVAL, '쿠팡','프로젝트 팀장', '파견직', 2300, 2500, '신입도 가능합니다.', '데이터 처리 및 API화', '딥러닝 경험 우대','Y');

INSERT INTO JOB_WRITE_POST VALUES (1, '카카오','백엔드 개발자', '정규직', 2300, 2500, '인성이 제일 중요하다고 봅니다. ', 'API 설계 및 유지보수', '컴퓨터공학 전공 우대',SYSDATE,'Y');
INSERT INTO JOB_WRITE_POST VALUES (2, '네이버','프론트 개발자', '비정규직', 2300, 2500, '대학교 졸업', '디자인 시스템 구축', 'UX 경험 우대',SYSDATE,'Y');
INSERT INTO JOB_WRITE_POST VALUES (3, '배달의민족','서버 관리자', '기간직', 2300, 2500, '외국어 능력 필수', 'ERD 설계 및 백업관리', 'DBA 경험자 우대',SYSDATE,'Y');
INSERT INTO JOB_WRITE_POST VALUES (4, '토스','서버 관리자', '시간제 정규직', 2300, 2500, '경력3년차 부터', '전체 서비스 개발', '팀 프로젝트 경험 우대',SYSDATE,'Y');
INSERT INTO JOB_WRITE_POST VALUES (5, '쿠팡','프로젝트 팀장', '파견직', 2300, 2500, '신입도 가능합니다.', '데이터 처리 및 API화', '딥러닝 경험 우대',SYSDATE, 'Y');
----------------------------------------------------------------------------------
-- CREATE TABLE JOB_POST_SKILLS
CREATE TABLE JOB_POST_SKILLS (
    RECRUITMENT_NO NUMBER NOT NULL,
    SKILL_NO NUMBER NOT NULL,
    
    CONSTRAINT FK_JOB_SKILL_RECRUITMENT FOREIGN KEY (RECRUITMENT_NO) REFERENCES JOB_POST(RECRUITMENT_NO),
    CONSTRAINT FK_JOB_SKILL_SKILL FOREIGN KEY (SKILL_NO) REFERENCES SKILL(SKILL_NO),
    CONSTRAINT JOB_POST_SKILLS PRIMARY KEY (RECRUITMENT_NO, SKILL_NO)
);

-- COMMENT ON JOB_POST_SKILLES
COMMENT ON TABLE JOB_POST_SKILLS IS '채용공고 기술 매핑 테이블';
COMMENT ON COLUMN JOB_POST_SKILLS.RECRUITMENT_NO IS '공고 번호 (FK)';
COMMENT ON COLUMN JOB_POST_SKILLS.SKILL_NO IS '기술 번호 (FK)';

-- INSERT INTO JOB_POST_SKILLS
INSERT INTO JOB_POST_SKILLS VALUES ( 1, 1);
INSERT INTO JOB_POST_SKILLS VALUES (2, 2);
INSERT INTO JOB_POST_SKILLS VALUES (3, 3);
INSERT INTO JOB_POST_SKILLS VALUES (4, 4);
INSERT INTO JOB_POST_SKILLS VALUES (5, 5);




----------------------------------------------------------------------------------
-- CREATE TABLE JJIM
CREATE TABLE JJIM (
    PICK_NO NUMBER PRIMARY KEY,
    RECRUITMENT_NO NUMBER NOT NULL,
    MEMBER_NO NUMBER NOT NULL,
    CONSTRAINT FK_JJIM_RECRUITMENT FOREIGN KEY (RECRUITMENT_NO) REFERENCES JOB_WRITE_POST(POST_NO),
    CONSTRAINT FK_JJIM_MEMBER FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
);

-- COMMENT ON JJIM
COMMENT ON TABLE JJIM IS '찜 테이블 (회원 관심 공고)';
COMMENT ON COLUMN JJIM.PICK_NO IS '찜 고유 번호 (PK)';
COMMENT ON COLUMN JJIM.RECRUITMENT_NO IS '채용공고 번호 (FK)';
COMMENT ON COLUMN JJIM.MEMBER_NO IS '회원 번호 (FK)';

-- INSERT INTO JJIM
INSERT INTO JJIM VALUES (SEQ_PICK_NO.NEXTVAL, 4, 2);
INSERT INTO JJIM VALUES (SEQ_PICK_NO.NEXTVAL, 5, 4);
INSERT INTO JJIM VALUES (SEQ_PICK_NO.NEXTVAL, 3, 1);
INSERT INTO JJIM VALUES (SEQ_PICK_NO.NEXTVAL, 2, 5);
INSERT INTO JJIM VALUES (SEQ_PICK_NO.NEXTVAL, 1, 3);




----------------------------------------------------------------------------------
-- CREATE TABLE ALARM
CREATE TABLE ALARM (
    ALARM_NO NUMBER PRIMARY KEY,
    ALERT_CONTENT VARCHAR2(1000) NOT NULL
);

-- COMMENT ON ALARM
COMMENT ON TABLE ALARM IS '알림 테이블';
COMMENT ON COLUMN ALARM.ALARM_NO IS '알림 번호 (PK)';
COMMENT ON COLUMN ALARM.ALERT_CONTENT IS '알림 내용';

-- INSERT INTO ALARM
INSERT INTO ALARM VALUES (SEQ_ALARM_NO.NEXTVAL, '공고에 지원이 완료되었습니다. 지원 내역을 확인해보세요.');
INSERT INTO ALARM VALUES (SEQ_ALARM_NO.NEXTVAL, '지원하신 공고의 마감일이 임박했어요. 지원현황을 확인해보세요');
INSERT INTO ALARM VALUES (SEQ_ALARM_NO.NEXTVAL, '공고가 마감되었습니다. 다음 기회를 기대해 주세요.');
INSERT INTO ALARM VALUES (SEQ_ALARM_NO.NEXTVAL, '기업에서 귀하의 프로필을 확인했습니다.');
COMMIT;
----------------------------------------------------------------------------------
-- COMMENT ON ALARM_HISTORY


CREATE TABLE ALARM_HISTORY (
    ALARM_HISTORY_NO NUMBER PRIMARY KEY,         -- 고유번호 (시퀀스로 관리 예정)
    ALARM_NO NUMBER NOT NULL,                    -- 알림 종류 번호
    RECEIVER_MEMBER_NO NUMBER NOT NULL,           -- 받는 사람 회원 번호
    SENDER_MEMBER_NO NUMBER NOT NULL,             -- 보내는사람 회원번호
    ALARM_CONTENT VARCHAR2(500) NOT NULL,         -- 알림 내용
    CREATE_DATE DATE DEFAULT SYSDATE,               -- 생성 시각
    
    CONSTRAINT FK_ALARM_SENDER FOREIGN KEY (SENDER_MEMBER_NO) REFERENCES MEMBER(MEMBER_NO),
    CONSTRAINT FK_ALARM_RECEIVER FOREIGN KEY (RECEIVER_MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
);

-- COMMENT ON ALARM_HISTORY
COMMENT ON TABLE ALARM_HISTORY IS '회원별 알림 테이블';
COMMENT ON COLUMN ALARM_HISTORY.ALARM_HISTORY_NO IS '알림 고유 번호 (PK)';
COMMENT ON COLUMN ALARM_HISTORY.ALARM_NO IS '알림 종류 번호 (FK)';
COMMENT ON COLUMN ALARM_HISTORY.RECEIVER_MEMBER_NO IS '알림 수신 회원 번호 (FK)';
COMMENT ON COLUMN ALARM_HISTORY.SENDER_MEMBER_NO IS '알림 발신 회원 번호 (FK)';
COMMENT ON COLUMN ALARM_HISTORY.ALARM_CONTENT IS '알림 내용';
COMMENT ON COLUMN ALARM_HISTORY.CREATE_DATE IS '알림 발생 시각';

-- INSERT INTO ALARM_HISTORY
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,1, 1,1, '새 공고가 등록되었습니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,2, 1,2, '지원 결과가 등록되었습니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,3, 1,3, '공고 마감 3일 전입니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,4, 1,4, '기업 회원가입이 승인되었습니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,5, 1,5, '이력서가 다운로드되었습니다.', SYSDATE);
--
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,1, 2,1, '새 공고가 등록되었습니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,2, 2,2, '지원 결과가 등록되었습니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,3, 2,3, '공고 마감 3일 전입니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,4, 2,4, '기업 회원가입이 승인되었습니다.', SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,5, 2,5, '이력서가 다운로드되었습니다.', SYSDATE);
--
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,1, 3,1, '새 공고가 등록되었습니다.',  SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,2, 3,2, '지원 결과가 등록되었습니다.',  SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,3, 3,3, '공고 마감 3일 전입니다.',  SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,4, 3,4, '기업 회원가입이 승인되었습니다.',  SYSDATE);
INSERT INTO ALARM_HISTORY VALUES (SEQ_ALARM_HISTORY_NO.NEXTVAL,5, 3,5, '이력서가 다운로드되었습니다.',  SYSDATE);
--



----------------------------------------------------------------------------------
-- CREATE TABLE ATTACHMENT
CREATE TABLE ATTACHMENT (
    FILE_NO NUMBER PRIMARY KEY,
    MEMBER_NO NUMBER NOT NULL,
    FILE_ORIGIN_NAME VARCHAR2(100) NOT NULL,
    FILE_EDIT_NAME VARCHAR2(100) NOT NULL,
    FILE_ROOT VARCHAR2(200) NOT NULL,
    FILE_TYPE VARCHAR2(10) NOT NULL,
    CONSTRAINT FK_ATTACHMENT_MEMBER FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
);

-- COMMENT ON ATTACHMENT
COMMENT ON TABLE ATTACHMENT IS '첨부파일 테이블';
COMMENT ON COLUMN ATTACHMENT.FILE_NO IS '파일 번호 (PK)';
COMMENT ON COLUMN ATTACHMENT.MEMBER_NO IS '업로드한 회원 번호 (FK)';
COMMENT ON COLUMN ATTACHMENT.FILE_ORIGIN_NAME IS '원본 파일명';
COMMENT ON COLUMN ATTACHMENT.FILE_EDIT_NAME IS '수정된 파일명';
COMMENT ON COLUMN ATTACHMENT.FILE_ROOT IS '파일 저장 경로';
COMMENT ON COLUMN ATTACHMENT.FILE_TYPE IS '파일 유형';

-- INSERT INTO ATTACHMENT
INSERT INTO ATTACHMENT VALUES (SEQ_FILE_NO.NEXTVAL, 1,  'resume1.pdf', 'resume12024.txt', '/resources/resume/', '이력서');
INSERT INTO ATTACHMENT VALUES (SEQ_FILE_NO.NEXTVAL, 2,  'resume2.pdf', 'resume22024.txt', '/resources/resume/', '이력서');
INSERT INTO ATTACHMENT VALUES (SEQ_FILE_NO.NEXTVAL, 3,  'resume3.pdf', 'resume32024.txt', '/resources/resume/', '이력서');
INSERT INTO ATTACHMENT VALUES (SEQ_FILE_NO.NEXTVAL, 4,  'resume4.pdf', 'resume42024.txt', '/resources/resume/', '이력서');
INSERT INTO ATTACHMENT VALUES (SEQ_FILE_NO.NEXTVAL, 5,  'resume5.pdf', 'resume52024.txt', '/resources/resume/', '이력서');



----------------------------------------------------------------------------------
-- CREATE TABLE APPLY_STATE
CREATE TABLE APPLY_STATE (
    RECRUITMENT_NO NUMBER NOT NULL ,
    MEMBER_NO2 NUMBER NOT NULL,
    FILE_NO NUMBER,
    APPLY_DATE DATE DEFAULT SYSDATE,
    READ CHAR(1) DEFAULT 'N',
    README CLOB,
    RESULT CHAR(1) DEFAULT 'M' NOT NULL,
    CONSTRAINT FK_APPLY_RECRUITMENT FOREIGN KEY (RECRUITMENT_NO) REFERENCES JOB_POST(RECRUITMENT_NO),
    CONSTRAINT FK_APPLY_MEMBER FOREIGN KEY (MEMBER_NO2) REFERENCES MEMBER(MEMBER_NO),
    CONSTRAINT FK_APPLY_FILE FOREIGN KEY (FILE_NO) REFERENCES ATTACHMENT(FILE_NO),
    CONSTRAINT PK_APPLY_STATE PRIMARY KEY (RECRUITMENT_NO, MEMBER_NO2)
);

-- COMMENT ON APPLY_STATE
COMMENT ON TABLE APPLY_STATE IS '지원 현황 테이블';
COMMENT ON COLUMN APPLY_STATE.RECRUITMENT_NO IS '공고 번호 (FK)';
COMMENT ON COLUMN APPLY_STATE.MEMBER_NO2 IS '지원자 회원 번호 (FK)';
COMMENT ON COLUMN APPLY_STATE.FILE_NO IS '첨부파일 번호 (FK)';
COMMENT ON COLUMN APPLY_STATE.APPLY_DATE IS '지원일';
COMMENT ON COLUMN APPLY_STATE.READ IS '열람 여부';
COMMENT ON COLUMN APPLY_STATE.RESULT IS '결과 상태';

-- INSERT INTO APPLY_STATE
INSERT INTO APPLY_STATE VALUES (1, 2, 1, SYSDATE, 'N', 'test1', 'M');
INSERT INTO APPLY_STATE VALUES (2, 1, 2, SYSDATE, 'N', 'test2', 'M');
INSERT INTO APPLY_STATE VALUES (3, 4, 3, SYSDATE, 'N', 'test3', 'M');
INSERT INTO APPLY_STATE VALUES (4, 5, 4, SYSDATE, 'N', 'test4', 'M');
INSERT INTO APPLY_STATE VALUES (5, 3, 5, SYSDATE, 'N', 'test5', 'M');

COMMIT;